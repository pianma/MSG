package {{basicPath}}.{{keyword}}.controller;

import {{basicPath}}.{{keyword}}.dto.{{upperKeyword}}Dto;
import {{basicPath}}.{{keyword}}.service.{{upperKeyword}}Service;
import lombok.RequiredArgsConstructor;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import springfox.documentation.annotations.ApiIgnore;
import org.springframework.web.bind.annotation.*;

import java.util.*;

@RestController
@RequiredArgsConstructor
public class {{upperKeyword}}Controller {

    private final {{upperKeyword}}Service {{keyword}}Service;

    @ApiOperation(value = "{{keyword}}: 전체 조회")
    @GetMapping("/{{keyword}}-all")
    public List<{{upperKeyword}}Dto> get{{upperKeyword}}List(){
        return {{keyword}}Service.get{{upperKeyword}}List();
    }

    @ApiOperation(value = "{{keyword}}: 조회")
    @ApiImplicitParams({
        {{apiImplicitParamsOfGet}}
    })
    @GetMapping("/{{keyword}}")
    public {{upperKeyword}}Dto get{{upperKeyword}}Data(@ApiIgnore {{upperKeyword}}Dto {{keyword}}Dto){
        return {{keyword}}Service.get{{upperKeyword}}Data({{keyword}}Dto);
    }

    @ApiOperation(value = "{{keyword}}: 등록")
    @ApiImplicitParams({
        {{apiImplicitParamsOfPost}}
    })
    @PostMapping("/{{keyword}}")
    public int add{{upperKeyword}}Data(@ApiIgnore {{upperKeyword}}Dto {{keyword}}Dto){
        return {{keyword}}Service.add{{upperKeyword}}Data({{keyword}}Dto);
    }

    @ApiOperation(value = "{{keyword}}: 수정")
    @ApiImplicitParams({
        {{apiImplicitParamsOfPut}}
    })
    @PutMapping("/{{keyword}}")
    public int modify{{upperKeyword}}Data(@ApiIgnore {{upperKeyword}}Dto {{keyword}}Dto){
        return {{keyword}}Service.modify{{upperKeyword}}Data({{keyword}}Dto);
    }

    @ApiOperation(value = "{{keyword}}: 삭제")
    @ApiImplicitParams({
        {{apiImplicitParamsOfDelete}}
    })
    @DeleteMapping("/{{keyword}}")
    public int delete{{upperKeyword}}Data(@ApiIgnore {{upperKeyword}}Dto {{keyword}}Dto){
        return {{keyword}}Service.delete{{upperKeyword}}Data({{keyword}}Dto);
    }
}